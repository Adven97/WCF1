//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReadCsv", ReplyAction="http://tempuri.org/IService1/ReadCsvResponse")]
        string ReadCsv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReadCsv", ReplyAction="http://tempuri.org/IService1/ReadCsvResponse")]
        System.Threading.Tasks.Task<string> ReadCsvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFlightInfo", ReplyAction="http://tempuri.org/IService1/getFlightInfoResponse")]
        string getFlightInfo(string v1, string v2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFlightInfo", ReplyAction="http://tempuri.org/IService1/getFlightInfoResponse")]
        System.Threading.Tasks.Task<string> getFlightInfoAsync(string v1, string v2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFlightInfo2", ReplyAction="http://tempuri.org/IService1/getFlightInfo2Response")]
        string getFlightInfo2(string v1, string v2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getFlightInfo2", ReplyAction="http://tempuri.org/IService1/getFlightInfo2Response")]
        System.Threading.Tasks.Task<string> getFlightInfo2Async(string v1, string v2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCF.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCF.ServiceReference1.IService1>, WCF.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string ReadCsv() {
            return base.Channel.ReadCsv();
        }
        
        public System.Threading.Tasks.Task<string> ReadCsvAsync() {
            return base.Channel.ReadCsvAsync();
        }
        
        public string getFlightInfo(string v1, string v2) {
            return base.Channel.getFlightInfo(v1, v2);
        }
        
        public System.Threading.Tasks.Task<string> getFlightInfoAsync(string v1, string v2) {
            return base.Channel.getFlightInfoAsync(v1, v2);
        }
        
        public string getFlightInfo2(string v1, string v2) {
            return base.Channel.getFlightInfo2(v1, v2);
        }
        
        public System.Threading.Tasks.Task<string> getFlightInfo2Async(string v1, string v2) {
            return base.Channel.getFlightInfo2Async(v1, v2);
        }
    }
}
